package OpenEJA.Generate;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;

import OpenEJA.Annotation.Id;
import OpenEJA.DAL.*;

public class EntityGenerator {
	
	public static final String FIELD  = "Field";
	public static final String TYPE = "Type";
	public static final String NULL = "Null";
	public static final String KEY = "Key";
	public static final String DEFAULT = "Default";
	public static final String EXTRA = "Extra";
	
	
	
	private List<String> entityVariables;
	private String entityClass;
	private String entityBaseClass;
	private List<String> primaryKeys;
	private List<String> foreignKeys;
	private List<String> autoIncrementKeys;
	private DBAdapter dba;
	
	public EntityGenerator(){
		this.entityVariables = new LinkedList<String>();
		this.entityClass = "";
		this.entityBaseClass = "Entity";
		this.primaryKeys = new LinkedList<String>();
		this.foreignKeys = new LinkedList<String>();
		this.autoIncrementKeys = new LinkedList<String>();
		this.dba = DBFactoryAdapter.getDBAdapter();
	}

	public void getEntity(String tableName){
		ResultSet rs = this.dba.tableDetail(tableName);
		this.prepareKeys(rs);
	}
	
	public void getAllEntities(String databaseName){
		
	}
	private void prepareKeys(ResultSet rs){
		try {
			ResultSetMetaData rsmd = rs.getMetaData();
			int columnCount = rsmd.getColumnCount();
			while(rs.next()){				
				
				System.out.println(rs.getString(KEY));
				
			}
		} 
		catch (SQLException e) {			
			e.printStackTrace();
		}
		
	}
	private void getCode(){
		
	}
	private void createClassFile(String code){
		
	}
	private void resetVariables(){
		
	}
}
