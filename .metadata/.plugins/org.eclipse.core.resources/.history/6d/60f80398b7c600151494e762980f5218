package OpenEJA.ORM;

import java.lang.annotation.Annotation;
import java.lang.reflect.Field;

import OpenEJA.DAL.DBAdapter;
import OpenEJA.DAL.DBFactoryAdapter;

public abstract class Entity implements IEntity {
	
	private final String name;	
	private final DBAdapter dba;

	
	public Entity(String name){
		this.name = name;
		this.dba = DBFactoryAdapter.getDBAdapter();		
	}
	@Override
	public void add(){
			
		Class<?> entityClass = this.getClass();
		Field[] fields = entityClass.getFields();
		
		for(Field field : fields){
			try {
				System.out.println(field.getName() + ":" + field.getType() + ":" + field.get(this));
				Annotation[] annotations = field.getAnnotations();
				for(Annotation annotation : annotations){
					System.out.println(annotation.toString());
				}			
			} catch (IllegalArgumentException e) {			
				e.printStackTrace();
			} catch (IllegalAccessException e) {			
				e.printStackTrace();
			}
			
		}
	
	}
	
	@Override
	public void remove(){
		//parse the annotation and add	
			
		
	}
	
	@Override
	public void update(){
		//parse the annotation and add	
		
	}
	public void print()
	{
		System.out.println(name);
	}

	

}
